<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" type="text/css" href="/css/styles.css">
    <title>Event Manager</title>
</head>

<body>
    <!-- action attribute: URL where the form's collected data should be sent when it is submitted-->
    <form action="<%= createEventRoute %>" method="post" name="event_form" onsubmit="return postDataAsJson()">
        <fieldset>
            <legend>
                CREATE YOUR EVENT
            </legend>

            <ul>
                <li>
                    <!-- Get event name-->
                    <label for="my_event">Event:</label>
                    <input type="text" id="my_event" name="event_name" />
                </li>
                <li>
                    <!-- Get event date & time-->
                    <label for="date">Date:</label>
                    <input type="datetime-local" id="date" name="event_date" />
                </li>
                <li>
                    <!-- Get additional info-->
                    <label for="description">Info:</label>
                    <textarea id="description" name="event_description"></textarea>
                </li>
                <li class="button">
                    <button type="submit">Create Event</button>
                </li>
            </ul>
        </fieldset>
    </form>

</body>

<script>
    // convert form data to JSON, when form is submitted. form is passed as parameter. 
    function postDataAsJson(form) {
        var eventForm = form;

        // Get data that was submitted in the form 
        var eventData = {
            event_name: eventForm.event_name.value,
            event_date: eventForm.event_date.value,
            event_description: eventForm.event_description.value
        };

        // Convert data to JSON
        var jsonData = JSON.stringify(eventData);

        // Send data to server
        fetch('<%= createEventRoute %>', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: jsonData
        })
            // handle response from server by converting it to JSON and catch errors
            .then(response => response.json())
            .then(data => {
                
                console.log(data);
            })
            .catch(error => {
                console.error('Fehler beim Senden der Daten: ', error);
            });

        // prevent reloading the page
        return false;
    }

</script>

</html>